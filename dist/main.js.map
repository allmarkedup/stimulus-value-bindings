{"mappings":"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","sources":["src/index.js","src/utils/index.js","src/utils/next-tick.js","src/utils/walk.js","src/utils/debounce.js","src/use-value-bindings.js","src/scheduler.js","src/mutation-observers/index.js","src/mutation-observers/observe-values.js","src/mutation-observers/observe-tree.js","src/bindings.js","src/bind.js"],"sourcesContent":["import { nextTick } from \"./utils\";\nimport { useValueBindings } from \"./use-value-bindings\";\n\nexport { useValueBindings, nextTick };\n","import { nextTick } from \"./next-tick\";\nimport { walk } from \"./walk\";\nimport { debounce } from \"./debounce\";\n\nexport { debounce, nextTick, walk };\n","let stack = [];\n\nexport function nextTick(callback = () => {}) {\n  queueMicrotask(() => {\n    setTimeout(() => releaseNextTicks());\n  });\n\n  return new Promise((res) => {\n    stack.push(() => {\n      callback();\n      res();\n    });\n  });\n}\n\nfunction releaseNextTicks() {\n  while (stack.length) stack.shift()();\n}\n","export function walk(el, callback) {\n  let skip = false;\n  callback(el, () => (skip = true));\n  if (skip) return;\n\n  let node = el.firstElementChild;\n  while (node) {\n    walk(node, callback, false);\n    node = node.nextElementSibling;\n  }\n}\n","export function debounce(func, wait) {\n  var timeout;\n\n  return function () {\n    const context = this,\n      args = arguments;\n\n    const later = function () {\n      timeout = null;\n      func.apply(context, args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n}\n","import { queueJob } from \"./scheduler\";\nimport { observeValues, observeTree } from \"./mutation-observers\";\nimport {\n  registerBindings,\n  updateBindings,\n  clearBindings,\n  registerBindingsForNode,\n  deregisterBindingsForNode,\n} from \"./bindings\";\n\nexport const useValueBindings = (controller) => {\n  let initialUpdateHasRun = false;\n\n  const updateBindingsAndNotify = () => {\n    updateBindings(controller, () => {\n      if (typeof controller.bindingsUpdated === \"function\") {\n        controller.bindingsUpdated(!initialUpdateHasRun);\n      }\n    });\n    initialUpdateHasRun = true;\n  };\n\n  const scheduleUpdate = () => queueJob(updateBindingsAndNotify);\n\n  const valuesObserver = observeValues(controller, scheduleUpdate);\n  const treeObserver = observeTree(controller, (addedNodes, removedNodes) => {\n    removedNodes.forEach((node) => deregisterBindingsForNode(controller, node));\n    addedNodes.forEach((node) => registerBindingsForNode(controller, node));\n    treeObserver.runWithoutObservation(updateBindingsAndNotify);\n  });\n\n  registerBindings(controller);\n  scheduleUpdate();\n\n  const disconnect = controller.disconnect;\n  Object.assign(controller, {\n    updateBindings: scheduleUpdate,\n\n    disconnect() {\n      valuesObserver.stop();\n      treeObserver.stop();\n      clearBindings(controller);\n\n      if (typeof disconnect === \"function\") {\n        disconnect.bind(controller)();\n      }\n    },\n  });\n\n  treeObserver.start();\n  valuesObserver.start();\n};\n","let flushPending = false;\nlet flushing = false;\nlet queue = [];\n\nexport function queueJob(job) {\n  if (!queue.includes(job)) queue.push(job);\n  queueFlush();\n}\n\nfunction queueFlush() {\n  if (!flushing && !flushPending) {\n    flushPending = true;\n    queueMicrotask(flushJobs);\n  }\n}\n\nexport function flushJobs() {\n  flushPending = false;\n  flushing = true;\n\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]();\n    lastFlushedIndex = i;\n  }\n\n  queue.length = 0;\n  lastFlushedIndex = -1;\n  flushing = false;\n}\n","import { observeValues } from \"./observe-values\";\nimport { observeTree } from \"./observe-tree\";\n\nexport { observeValues, observeTree };\n","export function observeValues(controller, callback) {\n  const values = controller.constructor.values || {};\n\n  let observing = false;\n\n  const changeCallbacks = Object.keys(values).map((key) => {\n    const callbackName = `${key}ValueChanged`;\n    const controllerCallback = controller[callbackName];\n    const monkeyPatchedCallback = function (value, previousValue) {\n      if (observing) {\n        callback(key, value, previousValue, this);\n      }\n      if (typeof controllerCallback === \"function\") {\n        controllerCallback.call(this, value, previousValue);\n      }\n    };\n    return [callbackName, monkeyPatchedCallback.bind(controller)];\n  });\n\n  Object.assign(controller, Object.fromEntries(changeCallbacks));\n\n  return {\n    start() {\n      observing = true;\n    },\n    stop() {\n      observing = false;\n    },\n  };\n}\n","export function observeTree(controller, callback) {\n  let observing = false;\n  const { element } = controller;\n  const filterElementNodes = (nodes) => Array.from(nodes).filter((node) => node.nodeType !== 3);\n\n  const onMutate = (mutationList) => {\n    const removedNodes = [];\n    const addedNodes = [];\n\n    mutationList.forEach((mutation) => {\n      if (mutation.type === \"childList\") {\n        removedNodes.push(...filterElementNodes(mutation.removedNodes));\n        addedNodes.push(...filterElementNodes(mutation.addedNodes));\n      }\n    });\n    if (addedNodes.length || removedNodes.length) {\n      callback(addedNodes, removedNodes);\n    }\n  };\n\n  const observer = new MutationObserver(onMutate);\n\n  return {\n    start() {\n      if (!observing) {\n        observer.observe(element, { childList: true, subtree: true });\n        observing = true;\n      }\n    },\n    stop() {\n      if (observing) {\n        const mutations = observer.takeRecords();\n        if (mutations.length > 0) onMutate(mutations);\n        observer.disconnect();\n        observing = false;\n      }\n    },\n    runWithoutObservation(callback) {\n      this.stop();\n      callback();\n      this.start();\n    },\n  };\n}\n","import { getProperty } from \"dot-prop\";\nimport { bind } from \"./bind\";\nimport { walk, nextTick } from \"./utils\";\n\nexport function updateBindings(controller, callback) {\n  const bindings = getBindings(controller);\n  bindings.forEach((binding) => {\n    let { node, name, path, negated } = binding;\n    if (!controller.element.contains(node)) {\n      // clean up any bindings for elements that have been removed from the DOM\n      bindings.delete(binding);\n    } else {\n      // Update bindings for the node\n      const value = getProperty(controller, path);\n      bind(node, name, negated ? !value : value);\n      node.removeAttribute(\"data-cloak\");\n    }\n  });\n\n  if (typeof callback === \"function\") {\n    // Run the callback once all bindings have been updated.\n    callback();\n  }\n}\n\nexport function registerBindings(controller) {\n  if (!bindingsAreInitialized(controller)) {\n    controller.__value_bindings = new Set();\n    registerBindingsForNode(controller, controller.element);\n  }\n}\n\nexport function registerBindingsForNode(controller, rootNode) {\n  const attrPrefix = `data-${controller.identifier}-bind`;\n\n  walk(rootNode, (node) => {\n    Array.from(node.attributes)\n      .filter(({ name }) => name.startsWith(attrPrefix))\n      .forEach((attr) => {\n        let negated = false;\n        let path = attr.value;\n        if (path.startsWith(\"!\")) {\n          negated = true;\n          path = path.replace(\"!\", \"\");\n        }\n        const name = attr.name === attrPrefix ? \"all\" : attr.name.replace(`${attrPrefix}-`, \"\");\n        registerBinding(controller, node, name, path, negated);\n        node.removeAttribute(attr.name);\n      });\n  });\n}\n\nexport function refreshBindings(controller) {\n  clearBindings(controller);\n  registerBindings(controller);\n}\n\nexport function registerBinding(controller, node, name, path, negated) {\n  getBindings(controller).add({ node, name, path, negated });\n}\n\nexport function deregisterBindingsForNode(controller, node) {\n  const bindings = getBindings(controller);\n\n  bindings.forEach((binding) => {\n    if (binding.node === node) {\n      bindings.delete(binding);\n    }\n  });\n}\n\nexport function clearBindings(controller) {\n  controller.__value_bindings?.clear();\n  controller.__value_bindings = new Set();\n}\n\nexport function getBindings(controller) {\n  return controller.__value_bindings;\n}\n\nfunction bindingsAreInitialized(controller) {\n  return controller.__value_bindings instanceof Set;\n}\n","import { getProperty } from \"dot-prop\";\n\nexport function bind(element, name, value) {\n  switch (name) {\n    case \"all\":\n      bindAll(element, value);\n      break;\n\n    case \"text\":\n      bindText(element, value);\n      break;\n\n    case \"html\":\n      bindHTML(element, value);\n      break;\n\n    case \"checked\":\n    case \"selected\":\n      bindAttributeAndProperty(element, name, value);\n      break;\n\n    default:\n      bindAttribute(element, name, value);\n      break;\n  }\n}\n\nfunction bindText(element, value) {\n  element.innerText = value;\n}\n\nfunction bindHTML(element, value) {\n  element.innerHTML = value;\n}\n\nfunction bindAttribute(el, name, value) {\n  if ([null, undefined, false].includes(value) && attributeShouldntBePreservedIfFalsy(name)) {\n    el.removeAttribute(name);\n  } else {\n    if (isBooleanAttr(name)) value = name;\n    setIfChanged(el, name, value);\n  }\n}\n\nfunction bindAll(element, obj) {\n  Object.keys(obj).forEach((name) => bind(element, name, getProperty(obj, name)));\n}\n\nfunction bindAttributeAndProperty(el, name, value) {\n  bindAttribute(el, name, value);\n  setPropertyIfChanged(el, name, value);\n}\n\nfunction setIfChanged(el, attrName, value) {\n  if (el.getAttribute(attrName) != value) {\n    el.setAttribute(attrName, value);\n  }\n}\n\nfunction setPropertyIfChanged(el, propName, value) {\n  if (el[propName] !== value) {\n    el[propName] = value;\n  }\n}\n\n// As per HTML spec table https://html.spec.whatwg.org/multipage/indices.html#attributes-3:boolean-attribute\nconst booleanAttributes = new Set([\n  \"allowfullscreen\",\n  \"async\",\n  \"autofocus\",\n  \"autoplay\",\n  \"checked\",\n  \"controls\",\n  \"default\",\n  \"defer\",\n  \"disabled\",\n  \"formnovalidate\",\n  \"inert\",\n  \"ismap\",\n  \"itemscope\",\n  \"loop\",\n  \"multiple\",\n  \"muted\",\n  \"nomodule\",\n  \"novalidate\",\n  \"open\",\n  \"playsinline\",\n  \"readonly\",\n  \"required\",\n  \"reversed\",\n  \"selected\",\n]);\n\nfunction isBooleanAttr(attrName) {\n  return booleanAttributes.has(attrName);\n}\n\nfunction attributeShouldntBePreservedIfFalsy(name) {\n  return ![\"aria-pressed\", \"aria-checked\", \"aria-expanded\", \"aria-selected\"].includes(name);\n}\n"],"names":[],"version":3,"file":"main.js.map"}